---

- name: platform dependent vars
  include_vars: "{{ item }}"
  loop: "{{ query('first_found', params, errors='ignore') }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
        - "{{ ansible_system }}.yml"
      paths:
        - '{{ role_path }}/vars/platform'
  tags: always

- name: platform dependent tasks
  include_tasks: "{{ item }}"
  loop: "{{ query('first_found', params, errors='ignore') }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
        - "{{ ansible_system }}.yml"
      paths:
        - '{{ role_path }}/tasks/platform/pre-install/'
  tags: install

- name: establish package
  become: true
  package:
    name: logstash
    state: present
  tags: install

- name: establish plugins
  become: true
  logstash_plugin:
    name: "{{ item }}"
    state: present
  loop: "{{ elk_logstash_plugins }}"
  notify: restart logstash
  tags: install

- name: populate service facts
  service_facts:
  tags: always

- name: configure pipelines
  become: true
  vars:
    validation: "{{ ansible_facts['services']['logstash.service'] is defined |
    ternary('sudo -u logstash %s -t -f %%s --debug --verbose' | format(platform['logstash']['binary']), 'true || %s') }}"
  template:
    src: pipeline.conf.j2
    dest: "{{ config_dir | default(platform['logstash']['pipelines']['config_dir']) }}/{{ pipeline.key | regex_replace('[^0-9a-zA-Z_]+', '_') }}.conf"
    owner: logstash
    group: logstash
    mode: "u=rw,go=r"
    validate: "{{ validation }}"
  loop_control:
    loop_var: pipeline
  loop: "{{ elk_logstash_pipelines | dict2items }}"
  notify: restart logstash
  tags: configure

- name: setup _services
  become: true
  systemd:
    name: logstash
    enabled: "{{ elk_logstash_service['enabled'] }}"
    state: "{{ elk_logstash_service['state'] }}"
  when:
    - ansible_service_mgr == 'systemd'
    - ansible_facts['services']['logstash'] is defined
  tags: always
